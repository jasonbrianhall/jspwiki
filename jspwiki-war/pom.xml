<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.  
-->
<project xmlns              = "http://maven.apache.org/POM/4.0.0"
         xmlns:xsi          = "http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation = "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    
    <parent>
      <groupId>org.apache.incubator.jspwiki</groupId>
      <artifactId>jspwiki-builder</artifactId>
      <version>2.9.1-SNAPSHOT</version>
    </parent>
  
    <modelVersion>4.0.0</modelVersion>
    <artifactId>jspwiki-war</artifactId>
    <name>Apache JSPWiki (Incubating) webapp</name>
    <packaging>war</packaging>
    <description>Apache JSPWiki (Incubating) is a leading open source WikiWiki engine, feature-rich 
    and built around standard J2EE components (Java, servlets, JSP).</description>

    <dependencies>
        <dependency>
            <groupId>xmlrpc</groupId>
            <artifactId>xmlrpc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-highlighter</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sourceforge</groupId>
            <artifactId>sandler</artifactId>
        </dependency>
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>oscache</artifactId>
        </dependency>
        <dependency>
            <groupId>oro</groupId>
            <artifactId>oro</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.metaparadigm</groupId>
            <artifactId>json-rpc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jvnet.hudson</groupId>
            <artifactId>org.suigeneris.jrcs.diff</artifactId>
        </dependency>
        <dependency>
            <groupId>jdom</groupId>
            <artifactId>jdom</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.freshcookies</groupId>
            <artifactId>freshcookies-security</artifactId>
        </dependency>
        <dependency>
            <groupId>ecs</groupId>
            <artifactId>ecs</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sourceforge</groupId>
            <artifactId>akismet-java</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>nekohtml</groupId>
            <artifactId>nekohtml</artifactId>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
        </dependency>
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.stripes</groupId>
            <artifactId>stripes</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
        </dependency>
        <dependency>
            <groupId>tomcat</groupId>
            <artifactId>jasper-runtime</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty.aggregate</groupId>
            <artifactId>jetty-all</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <scope>test</scope><!-- overwritting sxope defined in parent dpdncyMgmt; really needed here? -->
        </dependency>
    </dependencies>

    <build>
        <finalName>JSPWiki</finalName>
        <sourceDirectory>${basedir}/src</sourceDirectory>
        <testSourceDirectory>${basedir}/tests</testSourceDirectory>
        <resources>
            <resource>
                <directory>etc</directory>
                <includes>
                    <include>ini/*</include>
                </includes>
            </resource>
            <resource>
                <directory>etc/i18n</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>tests/etc</directory>
                <includes>
                    <!--include>selenium/*</include-->
                    <include>ini/*</include>
                    <include>jspwiki.policy</include>
                    <include>jspwiki-testUserPolicy.policy</include>
                    <include>test.properties</include>
                    <include>log4j.properties</include>
                    <include>TextFormattingRules.txt</include>
                    <include>TestPlugins.txt</include>
                </includes>
            </testResource>
        </testResources>
        <plugins>
            
            <!-- With below plugin can deploy to an embedded Tomcat instance via:
                 mvn clean install tomcat7:run-war [-Dmaven.test.skip]
                 ...or standalone by adding a <server/> entry "myTomcat":
                 http://www.jroller.com/gmazza/entry/web_service_tutorial#maventomcat
                 and running tomcat7:redeploy instead of run-war in 
                 string above.

                 Either way, JSPWiki URL will be
                 http://localhost:8080/JSPWiki
            -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <configuration>
                    <server>myTomcat</server>
                    <url>http://localhost:8080/manager/text</url>
                    <path>/${project.build.finalName}</path>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <configuration>
                            <target>
                                <copy file="tests/etc/userdatabase.xml.tmpl" toFile="tests/etc/userdatabase.xml"/>
                                <copy file="tests/etc/groupdatabase.xml.tmpl" toFile="tests/etc/groupdatabase.xml"/>
                                <copy file="etc/jspwiki.properties.tmpl" tofile="etc/jspwiki.properties" />
                                <copy file="tests/etc/jspwiki.properties.tmpl" tofile="target/test-classes/jspwiki.properties" />
                                <copy file="tests/etc/jspwiki_rcs.properties.tmpl" tofile="target/test-classes/jspwiki_rcs.properties" />
                                <copy file="tests/etc/jspwiki_vers.properties.tmpl" tofile="target/test-classes/jspwiki_vers.properties" />

                                <!-- Filter the properties files -->
                                <replace file="etc/jspwiki.properties"
                                         replacefilterfile="build.properties" />
                                <replace file="target/test-classes/jspwiki.properties"
                                         replacefilterfile="build.properties" />
                                <replace file="target/test-classes/jspwiki_rcs.properties"
                                         replacefilterfile="build.properties" />
                                <replace file="target/test-classes/jspwiki_vers.properties"
                                         replacefilterfile="build.properties" />

                                <!-- Create web.xml files for testing -->
                                <copy file="${basedir}/etc/web.xml" tofile="target/test-classes/WEB-INF/web.xml" />

                                <!-- For web unit tests, turn off SSL (self-signed certs b0rk
                                     the tests) and enable JDBC refs -->
                                <replace file="target/test-classes/WEB-INF/web.xml"
                                        token="CONFIDENTIAL" value="NONE" />
                                <replace file="target/test-classes/WEB-INF/web.xml"
                                        token="&lt;!--  REMOVE ME TO ENABLE JDBC DATABASE" value="" />
                                <replace file="target/test-classes/WEB-INF/web.xml"
                                        token="REMOVE ME TO ENABLE JDBC DATABASE  --&gt;" value="" />

                                <!-- For unit testing, turn on container auth -->
                                <replace file="target/test-classes/WEB-INF/web.xml"
                                        token="&lt;!--  REMOVE ME TO ENABLE CONTAINER-MANAGED AUTH" value="" />
                                <replace file="target/test-classes/WEB-INF/web.xml"
                                        token="REMOVE ME TO ENABLE CONTAINER-MANAGED AUTH  --&gt;" value="" />

                                <!-- Copy the DTDs to the test WEB-INF -->
                                <mkdir dir="target/test-classes/WEB-INF/dtd" />
                                <copy toDir="target/test-classes/WEB-INF/dtd">
                                    <fileset dir="${basedir}/etc/dtd/" />
                                </copy>
 
                                <!-- Copy the database configuration information -->
                                <mkdir dir="tests/etc/db/hsql" />
                                <copy file="tests/etc/jdbc.properties.tmpl" tofile="tests/etc/db/jdbc.properties" />
                                <!-- Bulk-copy the table setup/teardown scripts -->
                                <copy toDir="tests/etc/db/hsql" overwrite="true">
                                    <fileset dir="etc/db/hsql" />
                                    <filterset>
                                        <filtersfile file="target/test-classes/jspwiki.properties" />
                                        <filtersfile file="build.properties" />
                                    </filterset>
                                </copy>
                           </target>
                       </configuration>
                       <goals>
                           <goal>run</goal>
                       </goals>
                   </execution>
               </executions>
            </plugin>
            <!-- Surefire plugin (running unit tests):
                 http://maven.apache.org/surefire/maven-surefire-plugin/
                 
                 Individual tests can be run command line via:
                 mvn clean test -Dtest=WikiEngineTest,AclImplTest,...
                 
                 All tests can be skipped via -Dmaven.test.skip
             -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <!-- time-consuming tests excluded by default -->
                        <exclude>**/StressTestVersioningProvider.java</exclude>
                        <exclude>**/StressTestSpeed.java</exclude>
                        <!--exclude>**/*Test.java</exclude-->
                    </excludes>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>
            <!-- Compress certain CSS and JS files using the YUICompressor 
                 TODO: See if all JS files can be compressed to simplify
                 configuration (currently just using hardcoded subset in
                 Ant file.) 
            -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>compressJSfiles</id>
                        <goals>
                            <goal>compress</goal>
                        </goals>
                        <configuration>
                            <!-- Lots of warnings (300+) as YUICompressor is unhappy with our JS files -->
                            <!--jswarn>false</jswarn-->
                            <includes>
                                <include>scripts/jspwiki-common.js</include>
                                <include>scripts/jspwiki-edit.js</include>
                                <include>scripts/jspwiki-prefs.js</include>
                                <include>scripts/jspwiki-commonstyles.js</include>
                                <include>scripts/prettify.js</include>
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Separate execution for CSS files due to its different line-break setting 
                             (https://github.com/yui/yuicompressor/blob/master/README.md) as configured
                             in Ant.
                             TODO: See if can compress all CSS files (using Ant subset)
                             TODO: See if can have same line-break setting for JS and CSS to simplify
                                   configuration
                        -->
                        <id>compressCSSfiles</id>
                        <goals>
                            <goal>compress</goal>
                        </goals>
                        <configuration>
                            <linebreakpos>0</linebreakpos>
                            <includes>
                                <include>templates/default/jspwiki.css</include>
                                <include>templates/default/jspwiki_print.css</include>
                                <include>templates/default/skins/OrderedList/skin.css</include>
                                <include>templates/default/skins/PlainVanilla/skin.css</include>
                                <include>templates/default/skins/PlainVanilla 1024x768/skin.css</include>
                                <include>templates/default/skins/Smart/skin.css</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions> 
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webXml>etc/web.xml</webXml>
                    <webResources>
                        <resource>
                            <directory>etc</directory>
                            <targetPath>WEB-INF</targetPath>
                            <includes>
                                <include>userdatabase.xml</include>
                                <include>dtd/**</include>
                                <include>groupdatabase.xml</include>
                                <include>geronimo-web.xml</include>
                                <include>jspwiki.policy</include>
                                <include>*.tld</include>
                                <include>jspwiki.properties</include>
                            </includes>
                        </resource>
                        <resource>
                            <directory>etc</directory>
                            <targetPath>WEB-INF/classes</targetPath>
                            <includes>
                                <include>oscache.properties</include>
                            </includes>
                        </resource>
                        <resource>
                            <directory>src/webdocs</directory>
                            <includes>
                                <include>admin/**</include>
                                <include>error/**</include>
                                <include>images/**</include>
                                <include>scripts/**</include>
                                <include>templates/**</include>
                                <include>*.jsp</include>
                                <include>*.css</include>
                            </includes>
                            <!-- Below excluded because YUICompressor's version of
                                 the files will be used. -->
                            <excludes>
                                <exclude>scripts/jspwiki-common.js</exclude>
                                <exclude>scripts/jspwiki-edit.js</exclude>
                                <exclude>scripts/jspwiki-prefs.js</exclude>
                                <exclude>scripts/jspwiki-commonstyles.js</exclude>
                                <exclude>scripts/prettify.js</exclude>
                                <exclude>templates/default/jspwiki.css</exclude>
                                <exclude>templates/default/jspwiki_print.css</exclude>
                                <exclude>templates/default/skins/OrderedList/skin.css</exclude>
                                <exclude>templates/default/skins/PlainVanilla/skin.css</exclude>
                                <exclude>templates/default/skins/PlainVanilla 1024x768/skin.css</exclude>
                                <exclude>templates/default/skins/Smart/skin.css</exclude>
                            </excludes>
                        </resource>
                        <!-- Output directory configured above with the YUICompressor Maven plugin -->
                        <resource>
                            <directory>${project.build.directory}/generated-sources/yuicompress</directory>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
